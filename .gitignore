# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?






f2de4393b48944e191737fd39b27a42b------->yaxodah741@ndiety.com









const data = [
  [1724155200000, 60982, 61005, 60495, 60562],
  [1724169600000, 60543, 60904, 58710, 58901],
  [1724184000000, 58784, 59562, 58713, 59556],
  [1724198400000, 59487, 59629, 59060, 59060],
  [1724212800000, 59029, 59479, 58905, 59255],
  [1724227200000, 59330, 59751, 59218, 59716],
  [1724241600000, 59908, 59908, 59121, 59398],
];



useEffect(() => {
    const FetchTableCoinGraph = async () => {
      const response = await fetch(
        "https://api.coingecko.com/api/v3/coins/bitcoin/ohlc?vs_currency=usd&days=365",
        CoinGeckoApi
      );
      const data = await response.json();
      console.log(data," Graph Details Of table homepage coins list ");
    };

    FetchTableCoinGraph();
  }, []);


const data = [
  {
    name: "1693094400000",
    high: 26087,
    low: 25991,
  },
  {
    name: "1693440000000",
    high: 27999,
    low: 25886,
  },
  {
    name: "1693785600000",
    high: 27403,
    low: 25438,
  },
  {
    name: "1694131200000",
    high: 26401,
    low: 25476,
  },
  {
    name: "1694476800000",
    high: 26383,
    low: 25006,
  },
  {
    name: "1694822400000",
    high: 26834,
    low: 25125,
  },
  {
    name: "1695168000000",
    high: 27454,
    low: 26417,
  },
  {
    name: "1695513600000",
    high: 27373,
    low: 26406,
  },
  {
    name: "1695859200000",
    high: 26819,
    low: 26023,
  },
  {
    name: "1696204800000",
    high: 28042,
    low: 26323,
  },
  {
    name: "1696550400000",
    high: 28494,
    low: 27265,
  },
  {
    name: "1696896000000",
    high: 28179,
    low: 27243,
  },
  {
    name: "1697241600000",
    high: 27726,
    low: 26570,
  },
  {
    name: "1697587200000",
    high: 29483,
    low: 26816,
  },
  {
    name: "1697932800000",
    high: 30253,
    low: 28188,
  },
  {
    name: "1698278400000",
    high: 35066,
    low: 29741,
  },
  {
    name: "1698624000000",
    high: 34819,
    low: 33450,
  },
  {
    name: "1698969600000",
    high: 35878,
    low: 34108,
  },
  {
    name: "1699315200000",
    high: 35366,
    low: 34123,
  },
  {
    name: "1699660800000",
    high: 37936,
    low: 34546,
  },
  {
    name: "1700006400000",
    high: 37404,
    low: 35110,
  },
  {
    name: "1700352000000",
    high: 37904,
    low: 35389,
  },
  {
    name: "1700697600000",
    high: 37795,
    low: 35788,
  },
  {
    name: "1701043200000",
    high: 38349,
    low: 36972,
  },
  {
    name: "1701388800000",
    high: 38351,
    low: 36770,
  },
  {
    name: "1701734400000",
    high: 42403,
    low: 37632,
  },
  {
    name: "1702080000000",
    high: 44676,
    low: 41453,
  },
  {
    name: "1702425600000",
    high: 44346,
    low: 40322,
  },
  {
    name: "1702771200000",
    high: 43329,
    low: 40712,
  },
  {
    name: "1703116800000",
    high: 44201,
    low: 40571,
  },
  {
    name: "1703462400000",
    high: 44243,
    low: 42895,
  },
  {
    name: "1703808000000",
    high: 43789,
    low: 41820,
  },
  {
    name: "1704153600000",
    high: 44169,
    low: 41574,
  },
  {
    name: "1704499200000",
    high: 45870,
    low: 41805,
  },
  {
    name: "1704844800000",
    high: 47680,
    low: 43248,
  },
  {
    name: "1705190400000",
    high: 48888,
    low: 41730,
  },
  {
    name: "1705536000000",
    high: 43539,
    low: 41747,
  },
  {
    name: "1705881600000",
    high: 42883,
    low: 40300,
  },
  {
    name: "1706227200000",
    high: 41645,
    low: 38520,
  },
  {
    name: "1706572800000",
    high: 43287,
    low: 39827,
  },
  {
    name: "1706918400000",
    high: 43762,
    low: 41883,
  },
  {
    name: "1707264000000",
    high: 43520,
    low: 42284,
  },
  {
    name: "1707609600000",
    high: 48106,
    low: 42759,
  },
  {
    name: "1707955200000",
    high: 51937,
    low: 47624,
  },
  {
    name: "1708300800000",
    high: 52801,
    low: 50675,
  },
  {
    name: "1708646400000",
    high: 52902,
    low: 50706,
  },
  {
    name: "1708992000000",
    high: 54925,
    low: 50598,
  },
  {
    name: "1709337600000",
    high: 63637,
    low: 54478,
  },
  {
    name: "1709683200000",
    high: 68913,
    low: 60861,
  },
  {
    name: "1710028800000",
    high: 69428,
    low: 62933,
  },
  {
    name: "1710374400000",
    high: 73604,
    low: 67785,
  },
  {
    name: "1710720000000",
    high: 73738,
    low: 64866,
  },
  {
    name: "1711065600000",
    high: 68834,
    low: 60914,
  },
  {
    name: "1711411200000",
    high: 71007,
    low: 62450,
  },
  {
    name: "1711756800000",
    high: 71552,
    low: 68490,
  },
  {
    name: "1712102400000",
    high: 71344,
    low: 64693,
  },
  {
    name: "1712448000000",
    high: 69577,
    low: 64673,
  },
  {
    name: "1712793600000",
    high: 72632,
    low: 67569,
  },
  {
    name: "1713139200000",
    high: 71221,
    low: 61514,
  },
  {
    name: "1713484800000",
    high: 66798,
    low: 60062,
  },
  {
    name: "1713830400000",
    high: 67208,
    low: 60022,
  },
  {
    name: "1714176000000",
    high: 67166,
    low: 62924,
  },
  {
    name: "1714521600000",
    high: 64555,
    low: 59131,
  },
  {
    name: "1714867200000",
    high: 64349,
    low: 56637,
  },
  {
    name: "1715212800000",
    high: 65489,
    low: 57451,
  },
  {
    name: "1715558400000",
    high: 64538,
    low: 58195,
  },
  {
    name: "1715904000000",
    high: 62355,
    low: 56350,
  },
  {
    name: "1716249600000",
    high: 61698,
    low: 55312,
  },
  {
    name: "1716595200000",
    high: 63441,
    low: 58425,
  },
  {
    name: "1716940800000",
    high: 63191,
    low: 57459,
  },
  {
    name: "1717286400000",
    high: 62067,
    low: 56619,
  },
  {
    name: "1717632000000",
    high: 61047,
    low: 55517,
  },
  {
    name: "1717977600000",
    high: 62322,
    low: 57518,
  },
  {
    name: "1718323200000",
    high: 61938,
    low: 56362,
  },
  {
    name: "1718668800000",
    high: 63435,
    low: 59137,
  },
  {
    name: "1719014400000",
    high: 63691,
    low: 59455,
  },
  {
    name: "1719360000000",
    high: 62338,
    low: 57443,
  },
  {
    name: "1719705600000",
    high: 61819,
    low: 56293,
  },
  {
    name: "1720051200000",
    high: 62344,
    low: 57436,
  },
  {
    name: "1720396800000",
    high: 61524,
    low: 56135,
  },
  {
    name: "1720742400000",
    high: 61919,
    low: 57342,
  },
  {
    name: "1721088000000",
    high: 61775,
    low: 56258,
  },
  {
    name: "1721433600000",
    high: 62483,
    low: 58133,
  },
  {
    name: "1721779200000",
    high: 62536,
    low: 58453,
  },
  {
    name: "1722124800000",
    high: 61817,
    low: 56359,
  },
  {
    name: "1722470400000",
    high: 62342,
    low: 57449,
  },
  {
    name: "1722816000000",
    high: 61612,
    low: 56142,
  },
];




import React, { PureComponent } from "react";
import { Sparklines, SparklinesLine } from "react-sparklines";
 


const CoinSparkline = ({ coinData }) => {

  
  const prices = coinData.map((d) => (d.high + d.low) / 2); // Using average price
  const trend = prices[prices.length - 1] > prices[0] ? "#00FF00" : "#FF0000";

  return (
    <Sparklines data={prices} width={300} height={90}>
      <SparklinesLine color={trend} />
    </Sparklines>
  );
};

const Example = () => {

  return (
    <div style={{ width: "150px" }}>
      <CoinSparkline coinData={data} />
    </div>
  );
};

export default Example;










        dispatch(addCGCoinGraphData(coinGraphData));






/* From Uiverse.io by ahmedyasserdev */ 
<input id="burger-checkbox" type="checkbox" />
<label class="burger" for="burger-checkbox">
  <span></span>
  <span></span>
  <span></span>
</label>








<span className="pointer-events-none whitespace-pre-wrap bg-gradient-to-b from-black to-gray-300/80 bg-clip-text text-center text-8xl font-semibold leading-none text-transparent dark:from-white dark:to-slate-900/10">
        Particles
      </span>




                {/* <Tooltip content={<CustomTooltip />} /> */}




this code is given by you remember you just given me recently i just started the conversatioj in new chat becoz of conversation limit so the problem is occuring that i want to move this div somewhere at the top of my website and now recently it is somewhere at the middle of website so for xlarge screens i want to move top of the website and also  make sure that problem does not occurs that when increasing screen size from 1280px to 1536px this whole code doesnt not moves down when increasing the screen size 

plzz fix these all error



<div className="container mx-auto px-4">
          <h2 className="text-2xl font-bold mb-4">New Cryptocurrencies</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {NewCryptoCoin.map((crypto) => (
              <div
                key={crypto.id}
                className="bg-white shadow-md rounded-lg p-4"
              >
                <div className="flex items-center mb-2">
                  <img
                    src={crypto.image}
                    alt={crypto.name}
                    className="w-8 h-8 mr-2"
                  />
                  <h3 className="text-lg font-semibold">{crypto.name}</h3>
                </div>
                <p className="text-gray-600">
                  Symbol: {crypto.symbol.toUpperCase()}
                </p>
                <p className="text-gray-600">
                  Current Price: ${crypto.current_price.toFixed(2)}
                </p>
                <p className="text-gray-600">
                  Market Cap Rank: {crypto.market_cap_rank}
                </p>
                <p className="text-gray-600">
                  Added to CoinGecko:{" "}
                  {new Date(crypto.atl_date).toLocaleDateString()}
                </p>
              </div>
            ))}
          </div>
        </div>








        <td className="px-1 py-2 xsmall:px-6 xsmall:py-4  whitespace-nowrap text-xs xsmall:text-sm font-semibold text-gray-500">
                        <h1 className="inline-block px-1 xsmall:px-2 rounded-xl text-[4vw] text-black font-semibold">
                          ${" "}
                          {NFTFullDataStore?.market_cap?.usd?.toLocaleString(
                            "en-IN",
                            {
                              minimumFractionDigits: 0,
                              maximumFractionDigits: 0,
                            }
                          )}
                          <br />
                          <span className=" text-gray-600 ml-2">
                            {NFTFullDataStore?.market_cap?.native_currency?.toLocaleString(
                              "en-IN",
                              {
                                minimumFractionDigits: 0,
                                maximumFractionDigits: 0,
                              }
                            )}{" "}
                            ETH
                          </span>
                        </h1>
                      </td>
                      <td className="px-3 py-2 xsmall:px-6 xsmall:py-4 whitespace-nowrap text-[4vw] xsmall:text-sm font-semibold text-gray-500">
                        <h1 className="inline-block px-1 xsmall:px-2 rounded-xl font-semibold">
                          {NFTFullDataStore?.volume_24h?.native_currency} ETH
                          <br />
                          <span className="ml-1">
                            $
                            {NFTFullDataStore?.volume_24h?.usd?.toLocaleString()}
                          </span>
                        </h1>
                      </td>
                      <td className="px-8 py-2 xsmall:px-6 xsmall:py-4 whitespace-nowrap text-[4vw] xsmall:text-sm font-semibold text-gray-500">
                        <h1 className="inline-block px-1 xsmall:px-2 rounded-xl font-semibold">
                          {NFTFullDataStore?.one_day_sales}
                        </h1>
                      </td>
                      <td className="px-8 py-2 xsmall:px-6 xsmall:py-4 whitespace-nowrap text-[4vw] xsmall:text-sm font-semibold text-gray-500">
                        <h1 className="inline-block px-1 xsmall:px-2 rounded-xl font-semibold">
                          {NFTFullDataStore?.number_of_unique_addresses_24h_percentage_change?.toFixed(
                            1
                          )}
                          %
                        </h1>
                      </td>







                      <th className="px-4 py-2 xsmall:px-6 xsmall:py-3 max-w-[25vw] whitespace-nowrap xsmall:max-w-[30vw] bg-purple-400/50 backdrop-blur-md text-left text-xs font-semibold text-black uppercase tracking-wider">
                    market cap
                  </th>
                  <th className="px-4 py-2 xsmall:px-6 xsmall:py-3 max-w-[25vw] whitespace-nowrap xsmall:max-w-[30vw] bg-purple-400/50 backdrop-blur-md text-left text-xs font-semibold text-black uppercase tracking-wider">
                    24h Volume
                  </th>
                  <th className="px-4 py-2 xsmall:px-6 xsmall:py-3 max-w-[25vw] whitespace-nowrap xsmall:max-w-[30vw] bg-purple-400/50 backdrop-blur-md text-left text-xs font-semibold text-black uppercase tracking-wider">
                    24h Sales
                  </th>
                  <th className="px-4 py-2 xsmall:px-6 xsmall:py-3 max-w-[25vw] whitespace-nowrap xsmall:max-w-[30vw] bg-purple-400/50 backdrop-blur-md text-left text-xs font-semibold text-black uppercase tracking-wider">
                    24h Owners
                  </th>
                  <th className="px-4 py-2 xsmall:px-6 xsmall:py-3 max-w-[25vw] whitespace-nowrap xsmall:max-w-[30vw] bg-purple-400/50 backdrop-blur-md text-left text-xs font-semibold text-black uppercase tracking-wider">
                    Last 7 days
                  </th>





                  # main page code

                  <div className=" relative   ">
      <h1 className="absolute top-10 left-5 z-5   text-[#fbbf24] text-[5vw] xsmall:text-[3.5vw] small:text-[3vw] medium:text-[2.5vw] large:text-[2vw] xlarge:text-[2vw] 2xlarge:text-[1.5vw] 2xlarge:left-[5vw] font-semibold">
        Cryptocurrency Prices by Market Cap
        <p className=" large:relative large:z-99  text-sky-400 text-[3.5vw] xsmall:text-[2.5vw] small:text-[2.2vw] medium:text-[2vw] 2xlarge:text-[1vw] mt-2">
          The global cryptocurrency market cap today is{" "}
          {MarqueeData?.length > 0 && MarqueeData2?.length > 0 && (
            <span>
              {MarqueeData2[0].cap ? (
                <span className="text-[#64748b]">
                  {(MarqueeData2[0].cap / 1e12).toFixed(3)} Trillions, a{" "}
                  <span
                    className={`text-[3.5vw] xsmall:text-[2.5vw] small:text-[2.2vw] medium:text-[2vw] relative top-1 small:top-1 xsmall:top-2 2xlarge:text-[1vw] inline-flex items-center ${
                      MarqueeData[0].data.market_cap_change_percentage_24h_usd <
                      0
                        ? "text-red-500"
                        : "text-[#4BCC00]"
                    }`}
                  >
                    {MarqueeData[0].data.market_cap_change_percentage_24h_usd >=
                    0 ? (
                      <FaCaretUp className="text-[4vw] small:text-[3vw] medium:text-[2.5vw] 2xlarge:text-[1vw]" />
                    ) : (
                      <FaCaretDown className="text-[4vw] small:text-[3vw] medium:text-[2.5vw] 2xlarge:text-[1vw]" />
                    )}
                    {MarqueeData[0].data.market_cap_change_percentage_24h_usd?.toFixed(
                      1
                    )}
                    %
                  </span>
                </span>
              ) : (
                ""
              )}
            </span>
          )}{" "}
          change in the last 24 hours.{" "}
          <span className="text-purple-500 hover:text-orange-400 text-[3.5vw] xsmall:text-[2.5vw] medium:text-[2vw] 2xlarge:text-[1vw] hover:cursor-pointer hover:underline">
            Read more
          </span>
          <p className="mt-5">
            Total cryptocurrency trading volume in the last day is at{" "}
            <span className="text-lime-400">
              $
              {MarqueeData[0]?.data?.total_volume?.usd >= 1e12
                ? (MarqueeData[0]?.data?.total_volume?.usd / 1e12).toFixed(0) +
                  " Trillion"
                : MarqueeData[0]?.data?.total_volume?.usd >= 1e9
                ? (MarqueeData[0]?.data?.total_volume?.usd / 1e9).toFixed(0) +
                  " Billion"
                : MarqueeData[0]?.data?.total_volume?.usd >= 1e6
                ? (MarqueeData[0]?.data?.total_volume?.usd / 1e6).toFixed(0) +
                  " Million"
                : MarqueeData[0]?.data?.total_volume?.usd >= 1e3
                ? (MarqueeData[0]?.data?.total_volume?.usd / 1e3).toFixed(0) +
                  "K"
                : MarqueeData[0]?.data?.total_volume?.usd.toFixed(2)}{" "}
            </span>
            .Bitcoin dominance is at{" "}
            <span className="text-lime-400">
              {(MarqueeData2[0]?.btcDominance * 100).toFixed(2)}%
            </span>
            . CoinFam is now tracking{" "}
            <span className="text-lime-400">
              {MarqueeData[0]?.data?.active_cryptocurrencies.toLocaleString()}
            </span>{" "}
            cryptocurrencies.
          </p>
        </p>
      </h1>
      <div
        className="absolute top-[35vh] left-5 w-[90vw] h-auto bg-gradient-to-r from-[#F29492] to-[#114357] border-[2px] border-teal-600 shadow-teal-glow rounded-lg p-5
              xsmall:w-[80vw] xsmall:left-[10vw]
              small:w-[70vw] small:left-[15vw]
              medium:w-[60vw] medium:left-[20vw]
              large:w-[80vw] large:left-[10vw] large:top-[40vh]
              xlarge:w-[40vw] xlarge:left-[10vw] xlarge:top-[28vh]
              2xlarge:w-[30vw] 2xlarge:left-[15vw]"
      >
        {/* Bitcoin Section */}
        <div className="mb-3">
          <div className="flex items-center mb-1">
            <FaBitcoin className="text-yellow-400" size={25} />
            <h3 className="text-sm font-medium text-gray-700 ml-2">
              Bitcoin Market Cap
            </h3>
          </div>
          <div className="flex justify-between items-center">
            {MarqueeData2 && MarqueeData2.length > 0 && (
              <span className="text-xl font-bold text-black">
                ${MarqueeData2?.[0]?.cap?.toLocaleString("en-US")}
              </span>
            )}
            {MarqueeData && MarqueeData.length > 0 && (
              <span
                className={`flex items-center font-semibold ${
                  MarqueeData[0].data.market_cap_change_percentage_24h_usd >= 0
                    ? "text-green-500"
                    : "text-red-500"
                }`}
              >
                {MarqueeData[0].data.market_cap_change_percentage_24h_usd >=
                0 ? (
                  <FaCaretUp className="mr-1" />
                ) : (
                  <FaCaretDown className="mr-1" />
                )}
                {MarqueeData[0].data.market_cap_change_percentage_24h_usd.toFixed(
                  1
                )}
                %
              </span>
            )}
          </div>
        </div>

        {/* Separator */}
        <hr className="border-t border-gray-300 my-3" />

        {/* Ethereum Section */}
        <div>
          <div className="flex items-center mb-1">
            <FaEthereum className="text-blue-700" size={25} />
            <span className="text-sm font-medium text-gray-700 ml-2">
              Ethereum Market Cap
            </span>
          </div>
          <div className="flex justify-between items-center">
            <span className="text-xl font-bold text-black">
              $
              {MarketCapChart &&
                MarketCapChart[0]?.market_cap?.toLocaleString("en-US")}
            </span>
            <span
              className={`flex items-center font-semibold ${
                MarketCapChart &&
                MarketCapChart[0]?.market_cap_change_percentage_24h >= 0
                  ? "text-green-500"
                  : "text-red-500"
              }`}
            >
              {MarketCapChart &&
              MarketCapChart[0]?.market_cap_change_percentage_24h >= 0 ? (
                <FaCaretUp className="mr-1" />
              ) : (
                <FaCaretDown className="mr-1" />
              )}
              {MarketCapChart &&
                MarketCapChart[0]?.market_cap_change_percentage_24h?.toFixed(1)}
              %
            </span>
          </div>
        </div>
      </div>

      <div
        className="absolute top-[63vh] left-5 w-[90vw] h-auto bg-gradient-to-r from-[#F29492] to-[#114357] border-[2px] border-teal-600 shadow-teal-glow rounded-lg p-5
              xsmall:w-[80vw] xsmall:left-[10vw]
              small:w-[70vw] small:left-[15vw]
              medium:w-[60vw] medium:left-[20vw] medium:top-[63vh]
              large:w-[80vw] large:left-[10vw] large:top-[67vh]
              xlarge:w-[40vw] xlarge:left-[55vw] xlarge:top-[28vh]
              2xlarge:w-[30vw] 2xlarge:left-[48vw]"
      >
        {/* Bitcoin 24h Trading Volume */}
        <div className="mb-3">
          <div className="flex items-center mb-1">
            <FaBitcoin className="text-yellow-400 mr-1" size={25} />
            <h3 className="text-sm font-medium text-gray-700">
              Bitcoin 24h Trading Volume
            </h3>
          </div>
          <div className="flex justify-between items-center">
            {MarqueeData2 &&
              MarqueeData2.length > 0 &&
              MarqueeData2[0].volume !== undefined && (
                <span className="text-xl font-bold text-black">
                  ${MarqueeData2[0].volume.toLocaleString("en-US")}
                </span>
              )}
          </div>
        </div>

        {/* Separator */}
        <hr className="border-t border-gray-300 my-3" />

        {/* Ethereum 24h Trading Volume */}
        <div className="mb-3">
          <div className="flex items-center mb-1">
            <FaEthereum className="text-blue-700 mr-1" size={25} />
            <h3 className="text-sm font-medium text-gray-700">
              Ethereum 24h Trading Volume
            </h3>
          </div>
          <div className="flex justify-between items-center">
            <span className="text-xl font-bold text-black">
              $
              {MarketCapChart &&
                MarketCapChart[0]?.total_volume?.toLocaleString("en-US")}
            </span>
          </div>
        </div>

        {/* Separator */}
        <hr className="border-t border-gray-300 my-3" />

        {/* Binance 24h Trading Volume */}
        <div>
          <div className="flex items-center mb-1">
            <SiBinance className="text-yellow-400 mr-1" size={25} />
            <h3 className="text-sm font-medium text-gray-700">
              Binance 24h Trading Volume
            </h3>
          </div>
          <div className="flex justify-between items-center">
            <span className="text-xl font-bold text-black">
              $
              {MarketCapBNB &&
                MarketCapBNB[0]?.total_volume?.toLocaleString("en-US")}
            </span>
          </div>
        </div>
      </div>
      <div
        className="absolute top-[103vh] left-5 w-[90vw] h-auto bg-gradient-to-r from-[#F29492] to-[#114357]   border-[2px] border-teal-600 shadow-teal-glow rounded-lg p-4
                    xsmall:w-[80vw] xsmall:left-[10vw]
                    small:w-[70vw] small:left-[15vw]
                    medium:w-[60vw] medium:left-[20vw] medium:top-[102vh]
                    large:w-[80vw] large:left-[10vw] large:top-[105vh]
                    xlarge:w-[40vw] xlarge:left-[10vw] xlarge:top-[55vh]
                    2xlarge:w-[30vw] 2xlarge:left-[15vw]"
      >
        <div className="flex justify-between items-center mb-4">
          <h1 className="text-2xl xsmall:text-3xl small:text-4xl font-semibold text-blue-600">
            🔥 Trending
          </h1>
          <span className="text-lg xsmall:text-xl small:text-2xl text-red-600 font-semibold hover:text-green-400 flex items-center cursor-pointer">
            View more <FaAngleRight className="ml-1" />
          </span>
        </div>

        <ul className="space-y-4">
          {GetTrendingCoins?.coins.slice(0, 3).map((coin, index) => (
            <li key={index} className="flex items-center">
              <img
                className="border border-gray-600 rounded-full w-8 h-8 xsmall:w-10 xsmall:h-10 object-cover mr-3"
                src={coin?.item?.small}
                alt={coin?.item?.name}
              />
              <div className="flex-grow">
                <div className="font-semibold">{coin?.item?.name}</div>
                <div className="flex items-center justify-between mt-1">
                  <span>${coin?.item?.data?.price?.toFixed(5)}</span>
                  <div className="flex items-center">
                    {coin?.item?.data?.price_change_percentage_24h?.usd >= 0 ? (
                      <VscTriangleUp className="text-[#20AC62] mr-1" />
                    ) : (
                      <VscTriangleDown className="text-[#EF4565] mr-1" />
                    )}
                    <span
                      className={`${
                        coin?.item?.data?.price_change_percentage_24h?.usd >= 0
                          ? "text-[#20AC62]"
                          : "text-[#EF4565]"
                      }`}
                    >
                      {formatPercentage(
                        coin?.item?.data?.price_change_percentage_24h?.usd * 100
                      )}
                    </span>
                  </div>
                </div>
              </div>
            </li>
          ))}
        </ul>
      </div>

      <div
        className="absolute top-[143vh] left-5 w-[90vw] h-auto bg-gradient-to-r from-[#F29492] to-[#114357] border-[2px] border-teal-600 shadow-teal-glow rounded-lg p-4
                    xsmall:w-[80vw] xsmall:left-[10vw]
                    small:w-[70vw] small:left-[15vw]
                    medium:w-[60vw] medium:left-[20vw] medium:top-[143vh]
                    large:w-[80vw] large:left-[10vw] large:top-[145vh]
                    xlarge:w-[40vw] xlarge:left-[55vw] xlarge:top-[55vh]
                    2xlarge:w-[30vw] 2xlarge:left-[48vw]"
      >
        <div className="flex justify-between items-center mb-4">
          <h1 className="text-2xl xsmall:text-3xl small:text-4xl font-semibold text-blue-600">
            🚀 Top Gainers
          </h1>
          <span className="text-lg xsmall:text-xl small:text-2xl text-red-600 font-semibold hover:text-green-400 flex items-center cursor-pointer">
            View more <FaAngleRight className="ml-1" />
          </span>
        </div>

        <ul className="space-y-4">
          {AllGainers?.slice(0, 3).map((coin, index) => (
            <li key={index} className="flex items-center">
              <img
                className="border border-gray-600 rounded-full w-8 h-8 xsmall:w-10 xsmall:h-10 object-cover mr-3"
                src={coin?.logo}
                alt={coin?.name}
              />
              <div className="flex-grow">
                <div className="font-semibold">{coin?.name}</div>
                <div className="flex items-center justify-between mt-1">
                  <span>${formatPrice(coin?.price)}</span>
                  <div className="flex items-center">
                    {coin?.price_change_24h >= 0 ? (
                      <VscTriangleUp className="text-[#20AC62] mr-1" />
                    ) : (
                      <VscTriangleDown className="text-[#EF4565] mr-1" />
                    )}
                    <span
                      className={`${
                        coin?.price_change_24h >= 0
                          ? "text-[#20AC62]"
                          : "text-[#EF4565]"
                      }`}
                    >
                      {formatPercentage(coin?.price_change_24h * 100)}
                    </span>
                  </div>
                </div>
              </div>
            </li>
          ))}
        </ul>
      </div>
      <div
        className="absolute top-[183vh] left-5 w-[90vw] h-auto bg-gradient-to-r from-[#F29492] to-[#114357] border-[2px] border-teal-600 shadow-teal-glow rounded-lg p-4
                    xsmall:w-[80vw] xsmall:left-[10vw]
                    small:w-[70vw] small:left-[15vw]
                    medium:w-[60vw] medium:left-[20vw] medium:top-[184vh]
                    large:w-[80vw] large:left-[10vw] large:top-[185vh]
                    xlarge:w-[40vw] xlarge:left-[33vw] xlarge:top-[97vh]
                    2xlarge:w-[30vw] 2xlarge:left-[32vw] 2xlarge:top-[93vh] "
      >
        <div className="flex justify-between items-center mb-4">
          <h1 className="text-2xl xsmall:text-3xl small:text-4xl font-semibold text-blue-600">
            📉 Top Losers
          </h1>
          <span className="text-lg xsmall:text-xl small:text-2xl text-red-600 font-semibold hover:text-green-400 flex items-center cursor-pointer">
            View more <FaAngleRight className="ml-1" />
          </span>
        </div>

        <ul className="space-y-4">
          {AllLosers?.slice(0, 3).map((coin, index) => (
            <li key={index} className="flex items-center">
              <img
                className="border border-gray-600 rounded-full w-8 h-8 xsmall:w-10 xsmall:h-10 object-cover mr-3"
                src={coin?.logo}
                alt={coin?.name}
              />
              <div className="flex-grow">
                <div className="font-semibold">{coin?.name}</div>
                <div className="flex items-center justify-between mt-1">
                  <span>${formatPrice(coin?.price)}</span>
                  <div className="flex items-center">
                    {coin?.price_change_24h >= 0 ? (
                      <VscTriangleUp className="text-[#20AC62] mr-1" />
                    ) : (
                      <VscTriangleDown className="text-[#EF4565] mr-1" />
                    )}
                    <span
                      className={`${
                        coin?.price_change_24h >= 0
                          ? "text-[#20AC62]"
                          : "text-[#EF4565]"
                      }`}
                    >
                      {formatPercentage(coin?.price_change_24h * 100)}
                    </span>
                  </div>
                </div>
              </div>
            </li>
          ))}
        </ul>
      </div>
      <div className=" absolute top-[230vh] large:top-[235vh] left-[5vw] 2xlarge:left-[5vw] max-w-[90vw]  2xlarge:max-w-[90vw]  ">
        <CryptoPricesTable />
        <CryptoNews />
        <LatestArticlesData />
        <Footer />
      </div>
      {/* <div className=" ">
        <AnimatedGridBackground />
      </div> */}
    </div>




   
   
   
    # header componenet code no claude used

    <>
      <>
        <nav className="relative z-10 bg-white  medium:bg-red-600 border-gray-200 dark:bg-gray-900 dark:border-gray-700 ">
          <div className="max-w-screen-xl  flex flex-wrap items-center justify-between mx-auto p-2 2xlarge:p-[1.7vh]">
            <a
              href="/"
              className="flex items-center space-x-3 rtl:space-x-reverse"
            >
              <img
                src={logo}
                className="h-8 relative top-1 2xlarge:h-10"
                alt="Logo"
              />
              <span className="self-center text-[5vw] 2xlarge:text-xl font-semibold whitespace-nowrap dark:text-white"></span>
            </a>

            <input
              className="hidden"
              id="burger-checkbox"
              type="checkbox"
              onChange={toggleDropdownmenu}
            />
            <label
              className="burger medium:hidden large:hidden xlarge:hidden 2xlarge:hidden"
              htmlFor="burger-checkbox"
            >
              <span></span>
              <span></span>
              <span></span>
            </label>

            <div
              className={`${
                isDropdownOpen ? "block " : "hidden"
              } w-full medium:block large:block  medium:max-w-[62vw]  medium:relative medium:mr-[19vw] large:mr-[22vw] `}
              id="navbar-dropdown"
            >
              <ul className="2xlarge:ml-[0vw] h-[35vh]  medium:h-[7vh]  2xlarge:h-[5vh] relative flex flex-col font-medium p-4 medium:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 medium:space-x-2 rtl:space-x-reverse medium:flex-row medium:mt-0 medium:border-0 medium:bg-white dark:bg-gray-800 medium:dark:bg-gray-900 dark:border-gray-700">
                <div className="relative z-99 inline-block 2xlarge:left-[5vw] 2xlarge:-mt-1   text-left ">
                  <button
                    onClick={toggleCryptocurrenciesDropdown}
                    className="NavLinkBUtton   medium:mt-2 flex items-center  justify-between w-full py-2 px-3 rounded medium:w-auto text-gray-900 hover:bg-gray-100 medium:hover:bg-transparent medium:border-0 medium:hover:text-blue-700 dark:text-white medium:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white medium:dark:hover:bg-transparent"
                  >
                    <span className="NavSpanSecondButton flex gap-3">
                      <FaCoins className=" mt-1" />
                      <span className="text-blue-600">Cryptocurrencies</span>
                    </span>
                    <svg
                      className="w-2.5 h-2.5 ms-2.5"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 10 6"
                    >
                      <path
                        stroke="currentcolor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="2"
                        d="m1 1 4 4 4-4"
                      />
                    </svg>
                  </button>
                  {isCryptocurrenciesOpen && (
                    <div className="absolute z-20 right-0 w-[86vw] xsmall:w-[90vw] xlarge:w-[20vw] xlarge:ml-2 2xlarge:w-[15vw]  2xlarge:ml-3 large:w-[25vw] large:-left-10 mt-2 medium:-left-[2vw] medium:w-[31vw]    bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 medium:dark:bg-gray-700 dark:divide-gray-600">
                      <ul className="py-2 text-sm text-gray-700   dark:text-gray-400">
                        <li className=" ">
                          <a
                            href="/"
                            className=" w-[86vw] 2xlarge:w-[15vw] medium:w-[31vw] text-[4vw] inline-flex gap-2   block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <PiRankingFill className=" text-[6vw] medium:text-[3vw] large:text-[2vw] xlarge:text-[1.5vw] 2xlarge:text-[1vw]  text-white" />
                            <span className=" text-green-400 medium:text-[2vw] large:text-[1.5vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw]">
                              By Market Cap
                            </span>
                          </a>
                        </li>
                        <li>
                          <Link
                            to="/en/categories"
                            className=" w-[86vw] 2xlarge:w-[15vw] medium:w-[31vw]  text-[4vw] inline-flex gap-2 block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <BiSolidCategory className=" text-[6vw] medium:text-[3vw] large:text-[2vw] xlarge:text-[1.5vw] 2xlarge:text-[1vw] text-white" />
                            <span className=" text-green-400 medium:text-[2vw] large:text-[1.5vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw]">
                              Categories
                            </span>
                          </Link>
                        </li>
                        <li className=" ml-5 mt-2 mb-3 inline-flex">
                          Popular
                          <div className=" w-[65vw] 2xlarge:w-[10vw]  medium:w-[20vw] large:w-[17vw] xlarge:w-[14vw] border-b-[1px] border-gray-500 relative -top-2 left-1"></div>
                        </li>
                        <li>
                          <Link
                            to="/en/highlights"
                            className=" w-[86vw] 2xlarge:w-[15vw] medium:w-[31vw] text-[4vw] inline-flex gap-2 block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <span className=" text-green-400 inline-flex gap-2 text-[4vw] large:text-[1.5vw] medium:text-[2vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw]">
                              <FaRectangleList className=" text-white text-[6vw] large:text-[2vw] medium:text-[3vw] xlarge:text-[1.5vw] 2xlarge:text-[1vw]" />
                              Highlights
                            </span>
                          </Link>
                        </li>
                        <li>
                          <a
                            href="/en/newcryptocurrencies"
                            className=" w-[86vw] 2xlarge:w-[15vw] medium:w-[31vw] text-[4vw] inline-flex gap-2 block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <span className=" text-green-400 truncate inline-flex gap-2 text-[4vw]  2xlarge:text-[1vw]">
                              <PiSparkleFill className=" text-white text-[6vw] medium:text-[3vw] large:text-[2vw] xlarge:text-[1.5vw] 2xlarge:text-[1vw]" />
                              <span className=" truncate medium:text-[2vw] large:text-[1.5vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw]">
                                New Cryptocurrencies
                              </span>
                            </span>
                          </a>
                        </li>
                        <li>
                          <a
                            href="/en/crypto-Top-gainers-losers"
                            className=" w-[86vw] 2xlarge:w-[15vw] medium:w-[31vw] text-[4vw] inline-flex gap-2 block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <span className=" text-green-400 inline-flex gap-2 text-[4vw] medium:text-[2vw] large:text-[1.5vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw]">
                              <GiTrophy className="  text-white text-[6vw] medium:text-[3vw] large:text-[2vw] xlarge:text-[1.5vw] 2xlarge:text-[1vw]" />
                              Gainers & Losers
                            </span>
                          </a>
                        </li>
                        <li className=" ml-5 mt-2 mb-3 inline-flex">
                          Tools
                          <div className=" w-[70vw] 2xlarge:w-[11vw] medium:w-[22vw] large:w-[18vw] xlarge:w-[15vw]  border-b-[1px] border-gray-500 relative -top-2 left-1"></div>
                        </li>
                        <li>
                          <a
                            href="/en/all-cryptocurrencies"
                            className=" w-[86vw] 2xlarge:w-[15vw] medium:w-[31vw] text-[4vw] inline-flex gap-2 block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <span className=" text-green-400 inline-flex ml-1 text-[4vw] medium:text-[2vw] large:text-[1.5vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw]">
                              All Coins
                            </span>
                          </a>
                        </li>
                        <li>
                          <a
                            href="/en/coin-converter"
                            className=" w-[86vw] 2xlarge:w-[15vw] medium:w-[31vw] text-[4vw] inline-flex gap-2 block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <span className=" text-green-400  inline-flex ml-1 text-[4vw] medium:text-[2vw] large:text-[1.5vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw]">
                              Converter
                            </span>
                          </a>
                        </li>
                      </ul>
                    </div>
                  )}
                </div>
                <div className="relative z-99  inline-block top-2 2xlarge:top- 2xlarge:-mt-1 2xlarge:left-[6vw] text-left">
                  <button
                    onClick={toggleExchangesDropdown}
                    className=" NavLinkBUtton  medium:mt-0 flex items-center justify-between w-full py-2 px-3 rounded medium:w-auto text-gray-900 hover:bg-gray-100 medium:hover:bg-transparent medium:border-0 medium:hover:text-blue-700 dark:text-white medium:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white medium:dark:hover:bg-transparent"
                  >
                    <span className="NavSpanSecondButton flex gap-3">
                      <MdAccountBalance className=" mt-1" />
                      <span className="text-blue-600">Exchanges</span>
                    </span>
                    <svg
                      className="w-2.5 h-2.5 ms-2.5"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 10 6"
                    >
                      <path
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="2"
                        d="m1 1 4 4 4-4"
                      />
                    </svg>
                  </button>
                  {isExchangesOpen && (
                    <div className="absolute z-9999 right-0 w-[86vw]  large:w-[20vw] xlarge:w-[15vw] medium:w-[30vw] medium:-left-[0vw]  2xlarge:w-[8vw] mt-2 bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600">
                      <ul className="py-2 text-sm text-gray-700 dark:text-gray-400">
                        <li>
                          <a
                            href="/en/exchanges"
                            className="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <span className=" inline-flex relative gap-2 text-[4vw] medium:text-[2vw] large:text-[1.7vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw] text-green-400">
                              <BsBank className=" text-[6vw] medium:text-[3vw] large:text-[1.7vw] xlarge:text-[1.5vw] 2xlarge:text-[1vw] text-white" />
                              Crypto Exchanges
                            </span>
                          </a>
                        </li>
                        <li>
                          <a
                            href="/en/exchanges/derivatives "
                            className="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                          >
                            <span className="inline-flex relative gap-2 text-[4vw] medium:text-[2vw] large:text-[1.7vw] xlarge:text-[1.2vw] 2xlarge:text-[1vw] text-green-400">
                              <IoCubeSharp className=" text-[6vw] medium:text-[3vw] large:text-[1.7vw] xlarge:text-[1.5vw] 2xlarge:text-[1vw] text-white" />
                              Derivatives
                            </span>
                          </a>
                        </li>
                      </ul>
                    </div>
                  )}
                </div>
                <nav className="">
                  <div className="max-w-screen-xl mx-auto">
                    <div className="flex flex-wrap items-center justify-end">
                      {/* Show regular menu items only for 2XL screens and above (>1536px) */}
                      {!shouldShowMoreDropdown && <MenuItems />}

                      {/* More dropdown for medium through XL screens (768px-1536px) */}
                      {shouldShowMoreDropdown && (
                        <div className="relative NavLinkBUtton mt-2 left-2">
                          <button
                            onClick={() =>
                              setIsMoreDropdownOpen(!isMoreDropdownOpen)
                            }
                            className="flex  rounded-md items-center gap-2 px-3 py-[0.9vh] text-white hover:bg-gray-600"
                          >
                            More
                            <svg
                              className="w-2.5 h-2.5"
                              xmlns="http://www.w3.org/2000/svg"
                              fill="none"
                              viewBox="0 0 10 6"
                            >
                              <path
                                stroke="currentColor"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="m1 1 4 4 4-4"
                              />
                            </svg>
                          </button>

                          {isMoreDropdownOpen && (
                            <div className="absolute xlarge:left-10   right-0 mt-2 w-64 shadow-lg">
                              <MenuItems />
                            </div>
                          )}
                        </div>
                      )}
                    </div>
                  </div>
                </nav>

                <SearchBarForLargeScreen />
              </ul>
            </div>
          </div>
        </nav>

        <div className="hidden 2xlarge:block w-full max-w-[100vw] 2xlarge:max-w-[100vw] mx-auto 2xlarge:w-full relative overflow-hidden z-0">
          <video
            className="w-full h-auto 2xlarge:h-[60vh] mx-auto object-cover"
            autoPlay
            playsInline
            muted
            loop
            src="https://cdn.pixabay.com/video/2023/10/14/184941-874460311_large.mp4"
          >
            Your browser does not support the video tag.
          </video>
          <div className="absolute inset-0 bg-black bg-opacity-80"></div>
          <div className="hidden 2xlarge:block  absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[50vw] h-[45vh] backdrop-filter backdrop-blur-md bg-zinc-500 bg-opacity-15 rounded-lg">
            <div className="card">
              {/* <div className="content -top-28  relative  ">
                <CosmicSearchInput />
                <p className="heading relative z-90 top-[10vh] ">
                  Your Crypto Checker
                </p>
              </div> */}
            </div>
          </div>
        </div>

        <SearchBarForMobile />

        <div className="2xlarge:hidden mt-0 w-[100vw] border-b-[3px] border-yellow-400"></div>
      </>
      <MainPageMarquee />
      <div className=" bg-gradient-to-r from-[#3f4c6b] to-[#606c88] ">
        <HomePageData />
      </div>
    </>



    #  const menu items 



    const MenuItems = () => (
    <div className="2xlarge:flex  mt-4 medium:mt-0 2xlarge:mt-3 w-full  ">
      {/* NFT Menu */}
      <div className="w-full 2xlarge:h-[6vh] 2xlarge:-mt-2 2xlarge:relative 2xlarge:left-[7vw]">
        <button
          onClick={() => setIsNFTDropdownOpen(!isNFTDropdownOpen)}
          className="block w-full px-4 NavLinkBUtton py-2 2xlarge:py-[0.7vh] border-2 text-white hover:bg-gray-600"
        >
          <span className="flex items-center gap-2">
            <RiNftLine className="text-white" />
            <span className="text-blue-600">NFT</span>
            <svg
              className="w-2.5 h-2.5 ml-auto 2xlarge:ml-0"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 10 6"
            >
              <path
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="m1 1 4 4 4-4"
              />
            </svg>
          </span>
        </button>
        {isNFTDropdownOpen && (
          <div className="pl-4 2xlarge:pl-0 2xlarge:py-2  2xlarge:mt-2   mt-2 absolute w-[87vw] medium:w-[33vw] large:mt-1 large:w-full  2xlarge:w-[10vw] bg-gray-700 shadow-lg rounded-lg">
            <a href="/en/nft" className="block py-2  hover:bg-gray-600 ">
              <span className="text-green-400 2xlarge:ml-3 ">
                {" "}
                <span>🖼️</span>NFT Floor Price
              </span>
            </a>
          </div>
        )}
      </div>

      {/* Learn Menu */}
      <div className="w-full mt-2 2xlarge:-mt-2 2xlarge:ml-2 large:mt-1 2xlarge:relative 2xlarge:left-[8vw]">
        <button
          onClick={() => setIsLearnDropdownOpen(!isLearnDropdownOpen)}
          className="block w-full px-4 py-2 2xlarge:py-[0.7vh] NavLinkBUtton text-white hover:bg-gray-600"
        >
          <span className="flex items-center gap-2">
            <FaBookOpen className="text-white" />
            <span className="text-blue-600">Learn</span>
            <svg
              className="w-2.5 h-2.5 ml-auto"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 10 6"
            >
              <path
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="m1 1 4 4 4-4"
              />
            </svg>
          </span>
        </button>
        {isLearnDropdownOpen && (
          <div className="pl-4 2xlarge:pl-0 2xlarge:py-1  2xlarge:w-[10vw]  bg-gray-700 mt-2 rounded-lg">
            <Link
              to="/learn/crypto-articles"
              className="block px- py-2 text-white hover:bg-gray-600"
            >
              <span className="text-green-400 flex gap-1 2xlarge:ml-3">
                {" "}
                <RiArticleLine className="text-white mt-1" />
                Crypto Articles
              </span>
            </Link>
            <Link
              to="/learn/research"
              className="block px- py-2 text-white hover:bg-gray-600"
            >
              <span className="text-green-400 flex gap-1 2xlarge:ml-3">
                <FaLightbulb className=" text-white mt-1" />
                Research Insights
              </span>
            </Link>
            <Link
              to="/en/news"
              className="block px- py-2 text-white hover:bg-gray-600"
            >
              <span className="text-green-400 flex gap-1 2xlarge:ml-3">
                <ImNewspaper className=" text-white mt-1" />
                Crypto News
              </span>
            </Link>
          </div>
        )}
      </div>
    </div>
  );